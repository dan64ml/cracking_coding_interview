/*********************************************************************************
 * Написать метод сортировки массива строк, при котором анаграммы групируются друг
 * за другом.
 ********************************************************************************/

#include "chapter_10.h"

#include <vector>
#include <string>
#include <algorithm>

using namespace std;

namespace ch10 {

// Задача про поболтать о том, что надо сделать. Т.к. просят ОТСОРТИРОВАТЬ, а не
// сгрупировать, полная сортировка выглядит логичней. С другой стороны порядок 
// задан очень расплывчато. Здесь - полная сортировка. Можно раскидать по группам
// из анаграмм: взять unordered_map<string, vector<string>> и отсортированное слово
// в качестве ключа. Или вообще сгрупировать in place за O(N^2) сравнений ключей...
void SortAnagram(vector<string>& vec) {
    auto comp = [](string l, string r){
        sort(begin(l), end(l));
        sort(begin(r), end(r));
        return l < r;
    };

    sort(begin(vec), end(vec), comp);
}

} // namespace ch10
